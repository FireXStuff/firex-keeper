variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  firex_base_logging_dir: "$CI_PROJECT_DIR/flow_test_results"

cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - build
  - test
  - upload
  - update-docs

default:
  image: firexstuff/firex-alpine-build:latest
  before_script:
    - python -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip
    - pip install --upgrade firexbuilder
    
build:
  stage: build
  script:
    - firex-build build
  artifacts:
    paths:
      - dist/

test-unit:
  stage: test
  script:
    - firex-build unit_tests
  artifacts:
    paths:
      - .coverage

build-docs:
  stage:  test
  script:
    - firex-build docs
  artifacts:
    paths:
      - html/ 
      
test-integration:
  stage: test
  script:
    - pip install --upgrade firex-bundle-ci
    - firexapp submit --chain RunAllIntegrationTests --public_runs True --install_config cloud-ci-install-configs.json --sync
  artifacts:
    paths:
      - flow_test_results/
    when: always

upload-codecov:
  stage: upload
  script:
    - firex-build upload_codecov
  artifacts:
    reports:
      cobertura: coverage.xml

upload-results:
  inherit:
    default: false
  stage: upload
  image: google/cloud-sdk
  script:
    - gcloud auth activate-service-account --key-file $GOOGLE_APPLICATION_CREDENTIALS
    - gsutil -m rsync -e -r $firex_base_logging_dir  gs://runs.firexflame.com
  when: always

upload-pkg:
  stage: upload
  script:
    - pip install keyrings.alt
    - firex-build upload_pip
  only:
    - tags
    
update-docs:
  inherit:
    default: false
  stage: update-docs
  image: google/cloud-sdk
  script:
    - gcloud auth activate-service-account --key-file $GOOGLE_APPLICATION_CREDENTIALS 
    - gsutil -m rsync -r html gs://www.firexstuff.com/keeper
  needs:
    - upload-pkg
    - build-docs
  only:
    - tags
